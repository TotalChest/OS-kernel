Описание реализации именованного канала (FIFO):

1. Добавлен новый тип файла:

		#define FTYPE_FIF	2

2. Добавлено новое устройство:
		
		struct Dev devfifo =
		{
			.dev_id =	'o',
			.dev_name =	"fifo",
			.dev_read =	devfifo_read,
			.dev_stat =	devfifo_stat,
			.dev_close =	devfifo_close,
			.dev_write =	devfifo_write,
		};

3. В файле lib/fifo.c реализованы функции обращения к файловой системе для записи, чтения, закрытия и получения статистики для именовынных каналов:

		static int devfifo_close(struct Fd *fd);
		static ssize_t devfifo_read(struct Fd *fd, void *buf, size_t n);
		static ssize_t devfifo_write(struct Fd *fd, const void *buf, size_t n);
		static int devfifo_stat(struct Fd *fd, struct Stat *stat);

4. Открытие FIFO файла ведется через функцию open() только в режиме O_RDONLY или O_WRONLY;

5. Добавлена функция mkfifo(), короторая отправляет запрос на создание файла на диске с типом FTYPE_FIF:
	
		int mkfifo(const char *path)

6. Добавлена пользовательская программа позволяющая создавать именованные каналы из sh.

7. С помощью программы fifowrite можно из sh писать в определенный FIFO файл:

		fifowrite [КАНАЛ] [СЛОВО]

Именованные каналы открываются в неблокирующем режиме. Разрешается писать/читать FIFO файл, который не открыт на чтение/запись соответствено. Однако, при чтении из канала, который не открыт на запись, прочитаются все записанные данные и вернется конец файла. При записи в канал, который не открыт на чтение, запишутся все данные до заполнения канала и вернется ошибка в случае переполнения. 
